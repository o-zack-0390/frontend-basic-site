:root {
  --font-family-anton: "Anton", sans-serif;
  --font-family-noto-sans-jp: "Noto Sans JP", sans-serif;

  --color-white: #fffefc;
  --color-black: #020911;
  --color-accent-red: #f20574;
  --color-accent-yellow: #f2e52e;
  --color-background-black: #171525;
  --color-background-navy: #030427;
  --color-form-background-yellow: #fffab9;
  --color-form-placeholder-gray: #ad9783;
  --color-form-border-red: #df6da2;
  --color-button-hover-red: #f043a5;
  --color-course-hover-yellow: #f4e877;
  --color-hero-overlay: rgba(57, 24, 111, 0.4);
  --color-course-overlay: rgba(32, 8, 19, 0.63);
}

/* global */
*,
*::before,
*::after{
  box-sizing: border-box;
}

body{
  margin: 0;
  font-family: var(--font-family-noto-sans-jp);
  /* bodyタグは初期値でmarginが設定されているため 0 に上書きしておく */
}

img{
  display: block;
}

/* header */
.header{
  height: 80px;
  width: 100%;
  background-color: var(--color-background-black);
  display: flex;
  justify-content: center;
  align-items: center;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 2;
  /*
    justify-content: center; -> 子要素をX軸方向に中央揃え
    align-items: center;     -> 子要素をY軸方向に中央揃え
    position: fixed;         -> 要素を追従させる. 今回の場合は画面上から0px、画面左から0pxの位置に要素が配置され追従する
  */
}

.header-logo-wrapper{
  margin: 0;
  /* 
    ブラウザ側で user agent stylesheet というセレクタに 
    margin が初期値として設定されているので上書き 
  */
}

.header-logo{
  height: 50px;
}

/* hero */
.hero{
  background-image: url("../images/hero.png");
  background-size: cover;
  padding: 94px 40px;
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  margin-top: 80px;
  /*
    padding             -> 要素の「内容と枠の間」の余白を設定
    justify-content     -> flex-direction と並行する方向のレイアウトを調整
    flex-end            -> 子要素を右に寄せる
    align-items: center -> 子要素を中央に配置
    position: relative  -> その要素のもとのあった場所(static指定時)を起点として位置を決定
    margin-top: 80px    -> header 要素と重なってしまうので header の高さと同じ 80px を指定
  */
}

.hero::after{
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: var(--color-hero-overlay);
  /*
    content            -> これが無いと background-color が適用されない. ""の中に文章を記載できる
    position: absolute -> 親要素を起点として位置を決定
  */
}

.hero-container{
  width: 100%;
  max-width: 1000px;
  display: flex;
  justify-content: flex-end;
  z-index: 1;
  /*
    justify-content -> flex-direction と並行する方向のレイアウトを調整
    flex-end        -> 子要素を右に寄せる
    z-index         -> 要素を重ねる順番を指定. 値が大きいほど上に重なる
  */
}

.hero-texts{
  color: var(--color-accent-yellow);
  display: flex;
  flex-direction: column;
  gap: 30px
  /*
    flex-direction -> 子要素を「 縦並び(column) or 横並び(row) 」にする
    gap            -> 子要素同士の間隔。第一引数が行、第二引数が列 (https://ics.media/entry/210628/)
  */
}

.hero-main-copy{
  font-family: var(--font-family-anton);
  font-size: 64px;
  line-height: 1;
  margin: 0; 
  letter-spacing: 0.05em;
  color: var(--color-accent-yellow);
  /*
    line-height    -> 文字の大きさと上下の余白を合わせた高さ
    em             -> 文字の高さを基準とした単位。フォントサイズが10pxで1emなら10px、5emなら50px
    letter-spacing -> 文字の間隔
    margin         -> 要素の外側を囲う余白
  */
}

.hero-main-copy-accent{
  color: var(--color-accent-red);
}

.hero-sub-copy{
  font-family: var(--font-family-noto-sans-jp);
  font-size: 16px;
  margin: 0
}

/* about */
.about{
  background-color: var(--color-background-black);
  padding: 80px 0px;
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  /*
    padding             -> 要素の「内容と枠の間」の余白を設定
    justify-content     -> flex-direction と並行する方向のレイアウトを調整
    align-items         -> flex-direction と交差する方向のレイアウトを調整
    position: relative  -> その要素のもとのあった場所(static指定時)を起点として位置を決定
  */
}

.about-container{
  width: 100%;
  max-width: 1000px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 40px;
  /*
    justify-content     -> flex-direction と並行する方向のレイアウトを調整
    align-items         -> flex-direction と交差する方向のレイアウトを調整
    flex-end            -> 子要素を中央に寄せる
  */
}

.about-title{
  color: var(--color-white);
  line-height: 1.5;
  font-family: var(--font-family-anton);
  font-size: 32px;
  letter-spacing: 0.02em;
  /*
    line-height    -> 文字の大きさと上下の余白を合わせた高さ. font-size × 数値 で高さが決まる.
    letter-spacing -> 文字の高さを基準とした単位. フォントサイズが10pxで1emなら10px、5emなら50px
    letter-spacing -> 文字の間隔
    margin         -> 要素の外側を囲う余白
  */
}

.about-header-accent-red{
  color: var(--color-accent-red);
}

.about-header-accent-yellow{
  color: var(--color-accent-yellow);
}

.about-content{
  height: 170px;
  display: flex;
  flex-direction: row;
  gap: 10px
  /*
    flex-direction -> 子要素を「 縦並び(column) or 横並び(row) 」にする
    gap            -> 子要素同士の間隔。第一引数が行、第二引数が列 (https://ics.media/entry/210628/)
  */
}

.about-texts{
  width: 460px;
  font-size: 16px;
  color: var(--color-white);
}

.about-image{
  width: 320px;
  background-image: url("../images/live.png");
  background-size: cover;
}

/* courses */
.courses{
  background-color: var(--color-background-navy);
  padding: 80px 0px;
  display: flex;
  justify-content: center;
  align-items: center;
  /*
    padding             -> 要素の「内容と枠の間」の余白を設定
    justify-content     -> flex-direction と並行する方向のレイアウトを調整
    align-items         -> flex-direction と交差する方向のレイアウトを調整
  */
}

.courses-container{
  width: 100%;
  max-width: 1000px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 40px;
  /*
    justify-content     -> flex-direction と並行する方向のレイアウトを調整
    align-items         -> flex-direction と交差する方向のレイアウトを調整
  */
}

.courses-title{
  line-height: 1.5;
  color: var(--color-white);
  font-family: var(--font-family-anton);
  font-size: 32px;
}

.courses-cards{
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 20px
}

.courses-card{
  height: 150px;
  width: 800px;
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  position: relative;
  z-index: 1;
  /*
    justify-content     -> flex-direction と並行する方向のレイアウトを調整
    align-items         -> flex-direction と交差する方向のレイアウトを調整
    position: relative  -> 子要素が位置を参照するため指定
    z-index:            -> courses-card::before, courses-card, courses-card-body, courses-card-title の順番で表示
  */
}

.courses-card::before{
  background-color: var(--color-accent-red);
  content: "";
  position: absolute;
  top: 4px;
  right: -4px;
  bottom: -4px;
  left: 4px;
  z-index: 0;
  transition: all 0.3s ease;
}

.courses-card:hover::before {
  top: 12px;
  right: -12px;
  bottom: -12px;
  left: 12px;
}

.courses-card-image{
  height: 100%;
  width: 30%;
  color: var(--color-white);
  background-image: url("../images/live.png");
  background-size: cover;
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  /*
    justify-content     -> flex-direction と並行する方向のレイアウトを調整
    align-items         -> flex-direction と交差する方向のレイアウトを調整
    position: relative -> 子要素が位置を参照するため指定
  */
}

.courses-card-image::before{
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: var(--color-hero-overlay);
  /*
    content            -> これが無いと background-color が適用されない. ""の中に文章を記載できる
    position: absolute -> 親要素を起点として位置を決定
  */
}

.courses-card-title{
  font-family: var(--font-family-anton);
  font-size: 32px;
  letter-spacing: 0.05em;
  z-index: 3;
}

.courses-card-body{
  height: 100%;
  width: 70%;
  background-color: var(--color-accent-yellow);
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding: 20px;
  gap: 10px;
  z-index: 2;
  /*
    flex-direction -> 子要素を「 縦並び(column) or 横並び(row) 」にする
    gap            -> 子要素同士の間隔。第一引数が行、第二引数が列 (https://ics.media/entry/210628/)
  */
}

.courses-card-body:hover{
  background-color: var(--color-course-hover-yellow);
}

.courses-card-text{
  color: var(--color-black);
}

.courses-card-details{
  width: 100%;
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
  align-items: flex-end;
}

.courses-card-details-link{
  line-height: 22px;
  width: 20%;
  color: var(--color-accent-red);
}

/* courses-details-button */
.courses-details-button{
  height: 60px;
  width: 800px;
  color: var(--color-white);
  font-family: var(--font-family-anton);
  font-size: 20px;
  background-color: var(--color-accent-red);
  padding: 10px 40px;
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  gap: 20px;
  position: relative;
  z-index: 0;
}

.courses-details-button::before{
  content: "";
  position: absolute;
  top: 4px;
  right: -4px;
  bottom: -4px;
  left: 4px;
  width: 100%;
  height: 100%;
  background-color: var(--color-accent-yellow);
  z-index: -1;
  transition: all 0.3s ease;
  /*
    content            -> これが無いと background-color が適用されない. ""の中に文章を記載できる
    position: absolute -> 親要素を起点として位置を決定
  */
}

.courses-card-details-button:hover::before{
  top: 12px;
  right: -12px;
  bottom: -12px;
  left: 12px;
  background-color: var(--color-button-hover-red);
}

.courses-details-button-texts{
  z-index: 2;
}

.courses-details-button-image{
  background-image: url("../images/arrow-right.svg");
  background-size: cover;
  height: 20px;
  width: 27px;
  z-index: 3;
}

@media (max-width: 850px) {
  .header{
    height: 60px;
  }

  .header-logo{
    height: 30px;
  }

  .hero{
    margin-top: 60px;
    padding: 40px 20px;
    /*
      margin-top: 60px    -> header 要素と重なってしまうので header の高さと同じ 60px を指定
    */
  }

  .hero-container{
    justify-content: flex-start;
  }

  .hero-texts{
    gap: 10px
  }
}